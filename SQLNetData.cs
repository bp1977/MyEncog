using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace MyEncog
{
    class SQLNetData
    {
        public static string TrainHeader()
        { 
            return "select p.p_id,";
        }
        public static string TestHeader()
        {
            return TrainHeader() + " p.r_ID,p.finpos,p.odds, ";
        }

        public static string TestWhere()
        {
            StringBuilder SQL = new StringBuilder();

            SQL.Append("WHERE  races.R_Date >'01-JAN-2007' and races.R_Date <'01-Apr-2008' ");
            SQL.Append("AND p.odds        <> 0 ");
            SQL.Append("AND races.uk_ire   = 1"); 
         
            return SQL.ToString();
        }

        public static string TrainWhere()
        {
            StringBuilder SQL = new StringBuilder();

            SQL.Append("WHERE races.R_Date <'01-jan-2012' and races.R_Date >'01-apr-2008' ");
            SQL.Append("AND p.odds        <> 0 ");
            SQL.Append("AND races.uk_ire   = 1"); 
            return SQL.ToString();
        }

        public static string MainInput()
        {
            StringBuilder SQL = new StringBuilder();
            
            SQL.Append("  CASE p.goingcode ");
            SQL.Append("    WHEN 'H' ");
            SQL.Append("    THEN 1 ");
            SQL.Append("    ELSE 0 ");
            SQL.Append("  END gh, ");
            SQL.Append("  CASE p.goingcode ");
            SQL.Append("    WHEN 'G' ");
            SQL.Append("    THEN 1 ");
            SQL.Append("    ELSE 0 ");
            SQL.Append("  END gg, ");
            SQL.Append("  CASE p.goingcode ");
            SQL.Append("    WHEN 'F' ");
            SQL.Append("    THEN 1 ");
            SQL.Append("    ELSE 0 ");
            SQL.Append("  END gf, ");
            SQL.Append("  CASE p.goingcode ");
            SQL.Append("    WHEN 'S' ");
            SQL.Append("    THEN 1 ");
            SQL.Append("    ELSE 0 ");
            SQL.Append("  END gs, ");
            SQL.Append("  ROUND( ");
            SQL.Append("  (SELECT COUNT (*) ");
            SQL.Append("  FROM performances ptotalruns ");
            SQL.Append("  WHERE ptotalruns.h_id    = p.h_id ");
            SQL.Append("  AND ptotalruns.goingcode = 'H' ");
            SQL.Append("  AND ptotalruns.r_date    < DATEADD(DAY,  -1, p.r_date) ");
            SQL.Append("  AND ptotalruns.r_date    > DATEADD(YEAR, -5, p.r_date) ");
            SQL.Append("  )                                        / 100.0,4) totalruns2yearsH, ");
            SQL.Append("  ROUND( ");
            SQL.Append("  (SELECT COUNT (*) ");
            SQL.Append("  FROM performances ptotalruns ");
            SQL.Append("  WHERE ptotalruns.h_id    = p.h_id ");
            SQL.Append("  AND ptotalruns.goingcode = 'G' ");
            SQL.Append("  AND ptotalruns.r_date    < DATEADD(DAY,  -1, p.r_date) ");
            SQL.Append("  AND ptotalruns.r_date    > DATEADD(YEAR, -5, p.r_date) ");
            SQL.Append("  )                                        / 100.0,4) totalruns2yearsG, ");
            SQL.Append("  ROUND( ");
            SQL.Append("  (SELECT COUNT (*) ");
            SQL.Append("  FROM performances ptotalruns ");
            SQL.Append("  WHERE ptotalruns.h_id    = p.h_id ");
            SQL.Append("  AND ptotalruns.goingcode = 'S' ");
            SQL.Append("  AND ptotalruns.r_date    < DATEADD(DAY,  -1, p.r_date) ");
            SQL.Append("  AND ptotalruns.r_date    > DATEADD(YEAR, -5, p.r_date) ");
            SQL.Append("  )                                        / 100.0,4) totalruns2yearsS, ");
            SQL.Append("  ROUND( ");
            SQL.Append("  (SELECT COUNT (*) ");
            SQL.Append("  FROM performances ptotalruns ");
            SQL.Append("  WHERE ptotalruns.h_id    = p.h_id ");
            SQL.Append("  AND ptotalruns.goingcode = 'F' ");
            SQL.Append("  AND ptotalruns.r_date    < DATEADD(DAY,  -1, p.r_date) ");
            SQL.Append("  AND ptotalruns.r_date    > DATEADD(YEAR, -5, p.r_date) ");
            SQL.Append("  )                                        / 100.0,4) totalruns2yearsF, ");
            SQL.Append("  ROUND( ");
            SQL.Append("  (SELECT COUNT (*) ");
            SQL.Append("  FROM performances ptotalruns ");
            SQL.Append("  WHERE ptotalruns.h_id    = p.h_id ");
            SQL.Append("  AND ptotalruns.finpos    = 1 ");
            SQL.Append("  AND ptotalruns.goingcode = 'H' ");
            SQL.Append("  AND ptotalruns.r_date    < DATEADD(DAY,  -1, p.r_date) ");
            SQL.Append("  AND ptotalruns.r_date    > DATEADD(YEAR, -5, p.r_date) ");
            SQL.Append("  )                                        / 100.0,4) totalwin2yearsH, ");
            SQL.Append("  ROUND( ");
            SQL.Append("  (SELECT COUNT (*) ");
            SQL.Append("  FROM performances ptotalruns ");
            SQL.Append("  WHERE ptotalruns.h_id    = p.h_id ");
            SQL.Append("  AND ptotalruns.finpos    = 1 ");
            SQL.Append("  AND ptotalruns.goingcode = 'G' ");
            SQL.Append("  AND ptotalruns.r_date    < DATEADD(DAY,  -1, p.r_date) ");
            SQL.Append("  AND ptotalruns.r_date    > DATEADD(YEAR, -5, p.r_date) ");
            SQL.Append("  )                                        / 100.0,4) totalwin2yearsG, ");
            SQL.Append("  ROUND( ");
            SQL.Append("  (SELECT COUNT (*) ");
            SQL.Append("  FROM performances ptotalruns ");
            SQL.Append("  WHERE ptotalruns.h_id    = p.h_id ");
            SQL.Append("  AND ptotalruns.finpos    = 1 ");
            SQL.Append("  AND ptotalruns.goingcode = 'S' ");
            SQL.Append("  AND ptotalruns.r_date    < DATEADD(DAY,  -1, p.r_date) ");
            SQL.Append("  AND ptotalruns.r_date    > DATEADD(YEAR, -5, p.r_date) ");
            SQL.Append("  )                                        / 100.0,4) totalwin2yearsS, ");
            SQL.Append("  ROUND( ");
            SQL.Append("  (SELECT COUNT (*) ");
            SQL.Append("  FROM performances ptotalruns ");
            SQL.Append("  WHERE ptotalruns.h_id    = p.h_id ");
            SQL.Append("  AND ptotalruns.finpos    = 1 ");
            SQL.Append("  AND ptotalruns.goingcode = 'F' ");
            SQL.Append("  AND ptotalruns.r_date    < DATEADD(DAY,  -1, p.r_date) ");
            SQL.Append("  AND ptotalruns.r_date    > DATEADD(YEAR, -5, p.r_date) ");
            SQL.Append("  )                                        / 100.0,4) totalwin2yearsF, ");
            SQL.Append("  ROUND ( ");
            SQL.Append("  (SELECT SUM ( ");
            SQL.Append("    CASE ptstats.finpos ");
            SQL.Append("      WHEN 1 ");
            SQL.Append("      THEN 1 ");
            SQL.Append("      ELSE 0 ");
            SQL.Append("    END) / CONVERT(FLOAT(53), COUNT(*)) ");
            SQL.Append("  FROM performances ptstats ");
            SQL.Append("  WHERE ptstats.sireid  = p.sireid ");
            SQL.Append("  AND ptstats.goingcode = p.goingcode ");
            SQL.Append("  AND ptstats.r_date    < DATEADD(DAY, -1, p.r_date) ");
            SQL.Append("  AND ptstats.r_date   >= DATEADD(YEAR,-2, p.r_date) ");
            SQL.Append("  ) , 6 ) AS siresrrank, ");
            SQL.Append("  ROUND( ");
            SQL.Append("  (SELECT wct.median ( ");
            SQL.Append("    CASE ");
            SQL.Append("      WHEN pin.ORATING > 0 ");
            SQL.Append("      THEN ( pin.RHR)- (pin.ORATING) ");
            SQL.Append("      ELSE NULL ");
            SQL.Append("    END) avgrhr_or_df ");
            SQL.Append("  FROM PERFORMANCES pin ");
            SQL.Append("  INNER JOIN RACES rin ");
            SQL.Append("  ON rin.R_ID     = pin.R_ID ");
            SQL.Append("  WHERE pin.H_id  = p.H_id ");
            SQL.Append("  AND pin.r_date  < DATEADD(DAY,-2,p.r_date) ");
            SQL.Append("  AND pin.FINPOS <> 99 ");
            SQL.Append("  AND pin.r_date  > DATEADD(MONTH,-36,p.r_date ) ");
            SQL.Append("  ) ,2)                           / 100.0 alldiff, ");
            SQL.Append("  ROUND( ");
            SQL.Append("  (SELECT wct.median ( ");
            SQL.Append("    CASE ");
            SQL.Append("      WHEN pin.ORATING > 0 ");
            SQL.Append("      THEN ( pin.RHR)- (pin.ORATING) ");
            SQL.Append("      ELSE NULL ");
            SQL.Append("    END) avgrhr_or_df ");
            SQL.Append("  FROM PERFORMANCES pin ");
            SQL.Append("  INNER JOIN RACES rin ");
            SQL.Append("  ON rin.R_ID       = pin.R_ID ");
            SQL.Append("  WHERE pin.H_id    = p.H_id ");
            SQL.Append("  AND pin.r_date    < DATEADD(DAY,-2,p.r_date) ");
            SQL.Append("  AND pin.goingcode = p.goingcode ");
            SQL.Append("  AND pin.FINPOS   <> 99 ");
            SQL.Append("  AND pin.r_date    > DATEADD(MONTH,-36,p.r_date ) ");
            SQL.Append("  ) ,2)                             / 100.0 gngdiff, ");
            SQL.Append("  ROUND( ");
            SQL.Append("  (SELECT wct.median ( ");
            SQL.Append("    CASE ");
            SQL.Append("      WHEN pin.ORATING > 0 ");
            SQL.Append("      THEN ( pin.RHR)- (pin.ORATING) ");
            SQL.Append("      ELSE NULL ");
            SQL.Append("    END) avgrhr_or_df ");
            SQL.Append("  FROM PERFORMANCES pin ");
            SQL.Append("  INNER JOIN RACES rin ");
            SQL.Append("  ON rin.R_ID     = pin.R_ID ");
            SQL.Append("  WHERE pin.H_id  = p.H_id ");
            SQL.Append("  AND pin.r_date  < DATEADD(DAY,-2,p.r_date) ");
            SQL.Append("  AND rin.distid  = races.distid ");
            SQL.Append("  AND pin.FINPOS <> 99 ");
            SQL.Append("  AND pin.r_date  > DATEADD(MONTH,                                 -36,p.r_date ) ");
            SQL.Append("  ) ,2)                                                            / 100.0 dstdiff, ");
            SQL.Append("  isnull(prevp.rhr ,0)                                             / 200 prevrhr, ");
            SQL.Append("  isnull(prevp2.rhr ,0)                                            / 200 prevrhr2, ");
            SQL.Append("  isnull(prevp3.rhr ,0)                                            / 200 prevrhr3, ");
            SQL.Append("  isnull(prevp.sf ,0)                                              / 200 prevsf, ");
            SQL.Append("  isnull(prevp2.sf ,0)                                             / 200 prevsf2, ");
            SQL.Append("  ROUND ( RANK () OVER (PARTITION BY p.r_id ORDER BY p.h_age DESC) / 30.0, 3 ) agerank, ");
            SQL.Append("  ROUND ( p.h_age                                                  / 16.0,3) hage, ");
            SQL.Append("  ROUND ( (RANK () OVER (PARTITION BY p.r_id ORDER BY ");
            SQL.Append("  (SELECT COUNT (*) ");
            SQL.Append("  FROM performances ptotalruns ");
            SQL.Append("  WHERE ptotalruns.h_id = p.h_id ");
            SQL.Append("  AND ptotalruns.r_date < DATEADD(DAY,  -1, p.r_date) ");
            SQL.Append("  AND ptotalruns.r_date > DATEADD(YEAR, -4, p.r_date) ");
            SQL.Append("  ) DESC ) )                            / 40.0, 6 ) AS totalruns2yearsrank, ");
            SQL.Append("  ROUND( ");
            SQL.Append("  (SELECT COUNT (*) ");
            SQL.Append("  FROM performances ptotalruns ");
            SQL.Append("  WHERE ptotalruns.h_id = p.h_id ");
            SQL.Append("  AND ptotalruns.r_date < DATEADD(DAY,  -1, p.r_date) ");
            SQL.Append("  AND ptotalruns.r_date > DATEADD(YEAR, -5, p.r_date) ");
            SQL.Append("  )                                     / 100.0,4) totalruns2years, ");
            SQL.Append("  isnull( ");
            SQL.Append("  CASE RANK() over(partition BY p.r_id order by PREVP.SF DESC) ");
            SQL.Append("    WHEN 1 ");
            SQL.Append("    THEN PREVP.SF-(dbo.max2nd(PREVP.SF) over (partition BY p.r_id)) ");
            SQL.Append("    ELSE 0 ");
            SQL.Append("  END,0) /200.0 GAPTO2NDSF , ");
            SQL.Append("  isnull( ");
            SQL.Append("  CASE RANK() over(partition BY p.r_id order by PREVP.rhr DESC) ");
            SQL.Append("    WHEN 1 ");
            SQL.Append("    THEN PREVP.rhr-(dbo.max2nd(PREVP.rhr) over (partition BY p.r_id)) ");
            SQL.Append("    ELSE 0 ");
            SQL.Append("  END,0)/200.0 GAPTO2NDrhr , ");
            SQL.Append("  isnull(races.hcapstks,0) hcap, ");
            SQL.Append("  dbo.FILLYVSMALES(p.GENDER,p.R_ID) GENDERFLAG, ");
            SQL.Append("  ROUND ( RANK () OVER (PARTITION BY p.r_id ORDER BY p.orating DESC )/ 40.0, 6 ) ORRANK, ");
            SQL.Append("  ROUND ( RANK () OVER (PARTITION BY p.r_id ORDER BY prevp2.rhr      - p.orating DESC ) / 40.0, 6 ) rhrORdiff2RANK, ");
            SQL.Append("  ROUND ( RANK () OVER (PARTITION BY p.r_id ORDER BY prevp.rhr       - p.orating DESC ) / 40.0, 6 ) rhrORdiffRANK, ");
            SQL.Append("  ROUND ( RANK () OVER (PARTITION BY p.r_id ORDER BY ");
            SQL.Append("  (SELECT (MAX (rhr) - p.orating ) ");
            SQL.Append("  FROM performances ptstats ");
            SQL.Append("  WHERE ptstats.h_id  = p.h_id ");
            SQL.Append("  AND ptstats.r_date  < DATEADD(DAY,                           -1, p.r_date) ");
            SQL.Append("  AND ptstats.r_date >= DATEADD(DAY,                           -300, p.r_date) ");
            SQL.Append("  ) DESC )                                                     / 40.0, 6 ) AS maxOrdiffrank, ");
            SQL.Append("  CONVERT(INT,dbo.regexismatch('^lw:|: lw:',prevp.COMMENTS,1)) - CONVERT(INT, dbo.regexismatch(' bkwd:',prevp.COMMENTS,1)) lwbkwd, ");
            SQL.Append("  ROUND ( RANK () OVER (PARTITION BY p.r_id ORDER BY ");
            SQL.Append("  (SELECT AVG ( rhr ) - p.weight ");
            SQL.Append("  FROM performances ptstats ");
            SQL.Append("  WHERE ptstats.h_id  = p.h_id ");
            SQL.Append("  AND ptstats.r_date  < DATEADD(DAY, -1, p.r_date) ");
            SQL.Append("  AND ptstats.r_date >= DATEADD(DAY, -300, p.r_date) ");
            SQL.Append("  ) DESC )                           / 40.0, 6 ) AS avgrhrrank90, ");
            SQL.Append("  ROUND ( RANK () OVER (PARTITION BY p.r_id ORDER BY ");
            SQL.Append("  (SELECT MAX ( rhr ) - p.weight ");
            SQL.Append("  FROM performances ptstats ");
            SQL.Append("  WHERE ptstats.h_id  = p.h_id ");
            SQL.Append("  AND ptstats.r_date  < DATEADD(DAY, -1, p.r_date) ");
            SQL.Append("  AND ptstats.r_date >= DATEADD(DAY, -300, p.r_date) ");
            SQL.Append("  ) DESC )                           / 40.0, 6 ) AS maxrhrrank90, ");
            SQL.Append("  ROUND ( RANK () OVER (PARTITION BY p.r_id ORDER BY ");
            SQL.Append("  (SELECT MAX (orating ) ");
            SQL.Append("  FROM performances ptstats ");
            SQL.Append("  WHERE ptstats.h_id  = p.h_id ");
            SQL.Append("  AND ptstats.finpos                                                                                                IN (1, 2, 3 ) ");
            SQL.Append("  AND ptstats.r_date  < DATEADD(DAY,                                                                                 -1, p.r_date) ");
            SQL.Append("  AND ptstats.r_date >= DATEADD(DAY,                                                                                 -300, p.r_date) ");
            SQL.Append("  ) DESC )                                                                                                           / 40.0, 6 ) AS maxorplace, ");
            SQL.Append("  ROUND ( RANK () OVER (PARTITION BY p.r_id ORDER BY prevp.rhr DESC )                                                / 40.0, 6 ) rhrrank1, ");
            SQL.Append("  ROUND ( RANK () OVER (PARTITION BY p.r_id ORDER BY prevp.rhr                                                       - p.weight DESC ) / 40.0, 6 ) rhrrank1adjw, ");
            SQL.Append("  ROUND ( isnull (RANK () OVER (PARTITION BY p.r_id ORDER BY prevp.sf DESC ), 0 )                                    / 40.0, 6 ) sfrank1, ");
            SQL.Append("  ROUND ( RANK () OVER (PARTITION BY p.r_id ORDER BY dbo.GREATEST3 (prevp.rhr ,prevp2.rhr, prevp3.rhr)               - p.weight DESC ) / 40.0, 6 ) rhrrankmax, ");
            SQL.Append("  ROUND ( RANK () OVER (PARTITION BY p.r_id ORDER BY isnull( dbo.least3 ( prevp.rhr,prevp2.rhr,prevp3.rhr),0) DESC ) / 40.0, 6 ) rhrrankmin, ");
            SQL.Append("  ROUND ( RANK () OVER (PARTITION BY p.r_id ORDER BY isnull(dbo.least3 ( prevp.sf, prevp2.sf,prevp3.sf),0) DESC )    / 40.0, 6 ) sfrankmin, ");
            SQL.Append("  ROUND ( (RANK () OVER (PARTITION BY p.r_id ORDER BY prevp.odds ) )                                                 / 40.0, 6 )                                                                          AS prevoddsrank, ");
            SQL.Append("  ROUND ( (RANK () OVER (PARTITION BY p.r_id ORDER BY ( isnull (prevp.odds, 20 )                                     + isnull (prevp2.odds, 20 ) + isnull (prevp3.odds, 20 ) ) / -3.0 DESC) ) / 40.0, 6 ) AS avgoddsrank, ");
            SQL.Append("  ROUND ( (RANK () OVER (PARTITION BY p.r_id ORDER BY ( isnull (prevp.sf, 90 )                                       + isnull (prevp2.sf, 90 ) + isnull (prevp3.sf, 90 ) ) / 3.0 DESC ) ) / 40.0, 6 )     AS avgsfsrank, ");
            SQL.Append("  ROUND ( (RANK () OVER (PARTITION BY p.r_id ORDER BY ( isnull (prevp.rhr, 90 )                                      + isnull (prevp2.rhr, 90 ) + isnull (prevp3.rhr, 90 ) ) / 3.0 DESC ) ) / 40.0, 6 )   AS avgrhrsrank, ");
            SQL.Append("  ROUND ( (RANK () OVER (PARTITION BY p.r_id ORDER BY ");
            SQL.Append("  (SELECT SUM ( ");
            SQL.Append("    CASE ptstats.finpos ");
            SQL.Append("      WHEN 99 ");
            SQL.Append("      THEN 1 ");
            SQL.Append("      ELSE 0 ");
            SQL.Append("    END) / CONVERT(FLOAT(53), COUNT(*)) ");
            SQL.Append("  FROM performances ptstats ");
            SQL.Append("  WHERE ptstats.h_id  = p.h_id ");
            SQL.Append("  AND ptstats.r_date  < DATEADD(DAY, -1, p.r_date) ");
            SQL.Append("  AND ptstats.r_date >= DATEADD(DAY, -365, p.r_date) ");
            SQL.Append("  ) ) )                              / 40.0, 6 ) AS h_fallrank, ");
            SQL.Append("  ROUND ( (RANK () OVER (PARTITION BY p.r_id ORDER BY ");
            SQL.Append("  (SELECT SUM ( ");
            SQL.Append("    CASE ptstats.finpos ");
            SQL.Append("      WHEN 1 ");
            SQL.Append("      THEN 1 ");
            SQL.Append("      ELSE 0 ");
            SQL.Append("    END) / CONVERT(FLOAT(53), COUNT(*)) ");
            SQL.Append("  FROM performances ptstats ");
            SQL.Append("  WHERE ptstats.trainerid = p.trainerid ");
            SQL.Append("  AND ptstats.nhrtype     = p.nhrtype ");
            SQL.Append("  AND ptstats.r_date      < DATEADD(DAY, -1, p.r_date) ");
            SQL.Append("  AND ptstats.r_date     >= DATEADD(DAY, -365, p.r_date) ");
            SQL.Append("  ) DESC ) )                             / 40.0, 6 ) AS trainersrrank, ");
            SQL.Append("  ROUND ( (RANK () OVER (PARTITION BY p.r_id ORDER BY ");
            SQL.Append("  (SELECT SUM ( ");
            SQL.Append("    CASE ptstats.finpos ");
            SQL.Append("      WHEN 1 ");
            SQL.Append("      THEN 1 ");
            SQL.Append("      ELSE 0 ");
            SQL.Append("    END) / CONVERT(FLOAT(53), COUNT(*)) ");
            SQL.Append("  FROM performances ptstats ");
            SQL.Append("  WHERE ptstats.jock_id= p.jock_id ");
            SQL.Append("  AND ptstats.nhrtype  = p.nhrtype ");
            SQL.Append("  AND ptstats.r_date   < DATEADD(DAY, -1, p.r_date) ");
            SQL.Append("  AND ptstats.r_date  >= DATEADD(DAY, -365, p.r_date) ");
            SQL.Append("  ) DESC ) )                          / 40.0, 6 ) AS trainersrrank, ");
            SQL.Append("  ROUND ( (RANK () OVER (PARTITION BY p.r_id ORDER BY ");
            SQL.Append("  (SELECT SUM ( ");
            SQL.Append("    CASE ptstats.finpos ");
            SQL.Append("      WHEN 1 ");
            SQL.Append("      THEN 1 ");
            SQL.Append("      ELSE 0 ");
            SQL.Append("    END) / CONVERT(FLOAT(53), COUNT(*)) ");
            SQL.Append("  FROM performances ptstats ");
            SQL.Append("  WHERE ptstats.jock_id = p.jock_id ");
            SQL.Append("  AND ptstats.trainerid = p.trainerid ");
            SQL.Append("  AND ptstats.r_date    < DATEADD(DAY, -1, p.r_date) ");
            SQL.Append("  AND ptstats.r_date   >= DATEADD(YEAR,-3, p.r_date) ");
            SQL.Append("  ) DESC ) )                           / 40.0, 6 ) AS jocktrainersrrank, ");
            SQL.Append("  ROUND ( (RANK () OVER (PARTITION BY p.r_id ORDER BY ");
            SQL.Append("  (SELECT SUM ( ");
            SQL.Append("    CASE ptstats.finpos ");
            SQL.Append("      WHEN 1 ");
            SQL.Append("      THEN 1 ");
            SQL.Append("      ELSE 0 ");
            SQL.Append("    END) / CONVERT(FLOAT(53), COUNT(*)) ");
            SQL.Append("  FROM performances ptstats ");
            SQL.Append("  WHERE ptstats.trainerid = p.trainerid ");
            SQL.Append("  AND ptstats.r_date      < DATEADD(DAY, -1, p.r_date) ");
            SQL.Append("  AND ptstats.r_date     >= DATEADD(DAY, -365, p.r_date) ");
            SQL.Append("  ) DESC ) )                             / 40.0, 6 ) AS trainersrrank, ");
            SQL.Append("  ROUND ( (RANK () OVER (PARTITION BY p.r_id ORDER BY ");
            SQL.Append("  (SELECT AVG ( ptstats.rhr) ");
            SQL.Append("  FROM performances ptstats ");
            SQL.Append("  LEFT JOIN performances prevsts ");
            SQL.Append("  ON prevsts.p_id         = ptstats.prevperform ");
            SQL.Append("  WHERE ptstats.trainerid = p.trainerid ");
            SQL.Append("  AND ptstats.r_date      < DATEADD(DAY, -1, p.r_date) ");
            SQL.Append("  AND ptstats.r_date     >= DATEADD(DAY, -60, p.r_date) ");
            SQL.Append("  ) DESC ) )                             / 40.0, 6 ) AS trainerrhrdiffrank, ");
            SQL.Append("  rank() over ( partition BY p.r_id order by ");
            SQL.Append("  (SELECT ");
            SQL.Append("    (SELECT ROUND(SUM( ");
            SQL.Append("      CASE pin.finpos ");
            SQL.Append("        WHEN 1 ");
            SQL.Append("        THEN 1 ");
            SQL.Append("        ELSE 0 ");
            SQL.Append("      END) / CONVERT(FLOAT(53),COUNT(*)),2) AS SR ");
            SQL.Append("    FROM PERFORMANCES pin ");
            SQL.Append("    WHERE pin.trainerid = pin2.trainerid ");
            SQL.Append("    AND ");
            SQL.Append("      CASE ");
            SQL.Append("        WHEN pin.rslo <4 ");
            SQL.Append("        THEN pin.rslo ");
            SQL.Append("        ELSE 4 ");
            SQL.Append("      END = ");
            SQL.Append("      CASE ");
            SQL.Append("        WHEN pin2.rslo <4 ");
            SQL.Append("        THEN pin2.rslo ");
            SQL.Append("        ELSE 4 ");
            SQL.Append("      END ");
            SQL.Append("    AND pin.R_DATE    > DATEADD(MONTH,-24,pin2.R_DATE ) ");
            SQL.Append("    AND pin.R_DATE    <(pin2.R_DATE) ");
            SQL.Append("    AND pin.useradded = 0 ");
            SQL.Append("    ) sr ");
            SQL.Append("  FROM performances pin2 ");
            SQL.Append("  WHERE pin2.p_id = p.p_id ");
            SQL.Append("  ) DESC) / 40.0 srdiff, ");
            SQL.Append("  ROUND ( (RANK () OVER (PARTITION BY p.r_id ORDER BY ");
            SQL.Append("  (SELECT SUM ( ");
            SQL.Append("    CASE ptstats.finpos ");
            SQL.Append("      WHEN 1 ");
            SQL.Append("      THEN 1 ");
            SQL.Append("      ELSE 0 ");
            SQL.Append("    END) / CONVERT(FLOAT(53), COUNT(*)) ");
            SQL.Append("  FROM performances ptstats ");
            SQL.Append("  WHERE ptstats.jock_id = p.jock_id ");
            SQL.Append("  AND ptstats.r_date    < DATEADD(DAY, -1, p.r_date) ");
            SQL.Append("  AND ptstats.r_date   >= DATEADD(DAY, -365, p.r_date) ");
            SQL.Append("  ) DESC ) )                           / 40.0, 6 ) AS jocksrrank, ");
            SQL.Append("  isnull(ROUND ( ");
            SQL.Append("  (SELECT SUM ( ");
            SQL.Append("    CASE ptstats.finpos ");
            SQL.Append("      WHEN 1 ");
            SQL.Append("      THEN 1 ");
            SQL.Append("      ELSE 0 ");
            SQL.Append("    END) / CONVERT(FLOAT(53), COUNT(*)) ");
            SQL.Append("  FROM performances ptstats ");
            SQL.Append("  WHERE ptstats.jock_id = p.jock_id ");
            SQL.Append("  AND ptstats.r_date    < DATEADD(DAY, -1, p.r_date) ");
            SQL.Append("  AND ptstats.r_date   >= DATEADD(YEAR,-2, p.r_date) ");
            SQL.Append("  ) , 6 ),0) AS jocksr, ");
            SQL.Append("  isnull(ROUND ( ");
            SQL.Append("  (SELECT SUM ( ");
            SQL.Append("    CASE ptstats.finpos ");
            SQL.Append("      WHEN 1 ");
            SQL.Append("      THEN 1 ");
            SQL.Append("      ELSE 0 ");
            SQL.Append("    END) / CONVERT(FLOAT(53), COUNT(*)) ");
            SQL.Append("  FROM performances ptstats ");
            SQL.Append("  WHERE ptstats.trainerid = p.trainerid ");
            SQL.Append("  AND ptstats.r_date      < DATEADD(DAY, -1, p.r_date) ");
            SQL.Append("  AND ptstats.r_date     >= DATEADD(YEAR,-2, p.r_date) ");
            SQL.Append("  ) , 6 ),0) AS trainsr, ");
            SQL.Append("  ROUND ( (RANK () OVER (PARTITION BY p.r_id ORDER BY ");
            SQL.Append("  (SELECT SUM ( ");
            SQL.Append("    CASE ptstats.finpos ");
            SQL.Append("      WHEN 1 ");
            SQL.Append("      THEN 1 ");
            SQL.Append("      ELSE 0 ");
            SQL.Append("    END) / CONVERT(FLOAT(53), COUNT(*)) ");
            SQL.Append("  FROM performances ptstats ");
            SQL.Append("  WHERE ptstats.sireid = p.sireid ");
            SQL.Append("  AND ptstats.r_date   < DATEADD(DAY, -1, p.r_date) ");
            SQL.Append("  AND ptstats.r_date  >= DATEADD(YEAR,-2, p.r_date) ");
            SQL.Append("  ) DESC ) )                          / 40.0, 6 ) AS siresrrank, ");
            SQL.Append("  ROUND ( (RANK () OVER (PARTITION BY p.r_id ORDER BY ");
            SQL.Append("  (SELECT MAX (rhr) ");
            SQL.Append("  FROM performances phstats ");
            SQL.Append("  WHERE phstats.h_id  = p.h_id ");
            SQL.Append("  AND phstats.distid  = p.distid ");
            SQL.Append("  AND phstats.r_date  < DATEADD(DAY,                                                         -1, p.r_date) ");
            SQL.Append("  AND phstats.r_date >= DATEADD(MONTH,                                                       -12, p.r_date) ");
            SQL.Append("  ) DESC ))                                                                                  /40.0,6) AS rhrdistrank, ");
            SQL.Append("  ROUND(dbo.least (isnull (DATEDIFF(d, prevp.r_date, races.r_date ), 365), 365)              / 365.0, 6 ) dayssince, ");
            SQL.Append("  ROUND( RANK () OVER (PARTITION BY p.r_id ORDER BY DATEDIFF(d, prevp.r_date, races.r_date ) * -1)/ 20.0, 6 ) dayssincerank, ");
            SQL.Append("  ROUND(isnull((races.norunners)                                                             /30.0,1),6) ran, ");
            SQL.Append("  ROUND(isnull((prevr.norunners)                                                             /30.0,1),6) ranprev, ");
            SQL.Append("  ROUND( ");
            SQL.Append("  CASE ");
            SQL.Append("    WHEN isnull (prevp.finpos, -1)=-1 ");
            SQL.Append("    THEN 30 ");
            SQL.Append("    ELSE isnull (prevp.finpos,99) ");
            SQL.Append("  END /100.0,6) prevpfinpos, ");
            SQL.Append("  ROUND( ");
            SQL.Append("  CASE ");
            SQL.Append("    WHEN isnull (prevp2.finpos, -1)=-1 ");
            SQL.Append("    THEN 30 ");
            SQL.Append("    ELSE isnull (prevp2.finpos,99) ");
            SQL.Append("  END /100.0,6) prevp2finpos, ");
            SQL.Append("  ROUND( ");
            SQL.Append("  CASE ");
            SQL.Append("    WHEN isnull (prevp3.finpos, -1)=-1 ");
            SQL.Append("    THEN 30 ");
            SQL.Append("    ELSE isnull (prevp3.finpos,99) ");
            SQL.Append("  END                                                                                                         /40.0,6) prevp3finpos, ");
            SQL.Append("  isnull(p.rslo,0)                                                                                            / 40.0 rsl, ");
            SQL.Append("  ROUND ( rank() over (partition BY p.r_id order by LEN(isnull(REPLACE( prevp.rinotes,'-',''),'') ) DESC )    /40.0,4) rnk_notes, ");
            SQL.Append("  ROUND ( rank() over (partition BY p.r_id order by LEN(isnull(REPLACE( prevr.ricomments,'-',''),'') ) DESC ) /40.0,4) rnk_notesr, ");
            SQL.Append("  ROUND ( rank() over (partition BY p.r_id order by LEN(isnull(prevp.comments ,'') ) DESC )                   /40.0,4) rnk_comments, ");
            SQL.Append("  ROUND ( RANK () OVER (PARTITION BY p.r_id ORDER BY ");
            SQL.Append("  (SELECT AVG(rhr3) ");
            SQL.Append("  FROM ");
            SQL.Append("    (SELECT top 1 ptstats.rhr rhr3 ");
            SQL.Append("    FROM performances ptstats ");
            SQL.Append("    INNER JOIN races rin ");
            SQL.Append("    ON rin.r_id           = ptstats.r_id ");
            SQL.Append("    WHERE ptstats.h_id    = p.h_id ");
            SQL.Append("    AND ptstats.finpos   <>99 ");
            SQL.Append("    AND ptstats.r_date    < DATEADD(DAY, -1, p.r_date) ");
            SQL.Append("    AND ptstats.r_date   >= DATEADD(DAY, -350, p.r_date) ");
            SQL.Append("    AND ptstats.goingcode = p.goingcode ");
            SQL.Append("    ORDER BY ptstats.R_DATE DESC ");
            SQL.Append("    ) t ");
            SQL.Append("  ) DESC ) / 40.0, 6 ) AS rnkgrecent, ");
            SQL.Append("  ROUND ( RANK () OVER (PARTITION BY p.r_id ORDER BY ");
            SQL.Append("  (SELECT AVG(rhr3) ");
            SQL.Append("  FROM ");
            SQL.Append("    (SELECT top 1 ptstats.rhr rhr3 ");
            SQL.Append("    FROM performances ptstats ");
            SQL.Append("    INNER JOIN races rin ");
            SQL.Append("    ON rin.r_id         = ptstats.r_id ");
            SQL.Append("    WHERE ptstats.h_id  = p.h_id ");
            SQL.Append("    AND ptstats.finpos <>99 ");
            SQL.Append("    AND ptstats.r_date  < DATEADD(DAY, -1, p.r_date) ");
            SQL.Append("    AND ptstats.r_date >= DATEADD(DAY, -350, p.r_date) ");
            SQL.Append("    AND ptstats.distid  = p.distid ");
            SQL.Append("    ORDER BY ptstats.R_DATE DESC ");
            SQL.Append("    ) t ");
            SQL.Append("  ) DESC ) / 40.0, 6 ) AS rnkdrecent, ");
            SQL.Append("  ROUND ( RANK () OVER (PARTITION BY p.r_id ORDER BY ");
            SQL.Append("  (SELECT AVG(rhr3) ");
            SQL.Append("  FROM ");
            SQL.Append("    (SELECT top 1 ptstats.rhr rhr3 ");
            SQL.Append("    FROM performances ptstats ");
            SQL.Append("    INNER JOIN races rin ");
            SQL.Append("    ON rin.r_id          = ptstats.r_id ");
            SQL.Append("    WHERE ptstats.h_id   = p.h_id ");
            SQL.Append("    AND ptstats.finpos  <>99 ");
            SQL.Append("    AND ptstats.r_date   < DATEADD(DAY, -1, p.r_date) ");
            SQL.Append("    AND ptstats.r_date  >= DATEADD(DAY, -350, p.r_date) ");
            SQL.Append("    AND ptstats.courseid = p.courseid ");
            SQL.Append("    ORDER BY ptstats.R_DATE DESC ");
            SQL.Append("    ) t ");
            SQL.Append("  ) DESC ) / 40.0, 6 ) AS rnkcrecent, ");
            SQL.Append("  ROUND ( RANK () OVER (PARTITION BY p.r_id ORDER BY ");
            SQL.Append("  (SELECT AVG(rhr3) ");
            SQL.Append("  FROM ");
            SQL.Append("    (SELECT top 1 ptstats.rhr rhr3 ");
            SQL.Append("    FROM performances ptstats ");
            SQL.Append("    INNER JOIN races rin ");
            SQL.Append("    ON rin.r_id         = ptstats.r_id ");
            SQL.Append("    WHERE ptstats.h_id  = p.h_id ");
            SQL.Append("    AND ptstats.finpos <>99 ");
            SQL.Append("    AND ptstats.r_date  < DATEADD(DAY, -1, p.r_date) ");
            SQL.Append("    AND ptstats.r_date >= DATEADD(DAY, -350, p.r_date) ");
            SQL.Append("    AND rin.direct      = races.direct ");
            SQL.Append("    ORDER BY ptstats.R_DATE DESC ");
            SQL.Append("    ) t ");
            SQL.Append("  ) DESC )              / 40.0, 6 ) AS rnkdtrecent, ");
            SQL.Append("  ROUND (( ((prevp2.sf  + prevp.sf) / 2.0) - ((prevp3.sf + prevp4.sf) / 2.0)) / 100.0, 4) sfchange, ");
            SQL.Append("  ROUND (( ((prevp2.rhr + prevp.rhr + prevp3.rhr) / 3.0) - ((prevp6.rhr + prevp4.rhr + prevp5.rhr) / 3.0))/ 100.0, 4) rhrchange, ");
            SQL.Append("  ROUND (( ((prevp2.rhr + prevp.rhr) / 2.0) - ((prevp3.rhr + prevp4.rhr) / 2.0)) / 100.0, 4) rhrchange, ");
            SQL.Append("  (prevp.raceformplus   + (isnull(prevp2.raceformplus,0) * .5)) /2.0 rfplus, ");
            SQL.Append("  ROUND ( (RANK () OVER (PARTITION BY p.r_id ORDER BY ");
            SQL.Append("  (SELECT MAX (rhr) ");
            SQL.Append("  FROM performances phstats ");
            SQL.Append("  WHERE phstats.h_id  = p.h_id ");
            SQL.Append("  AND phstats.nhrtype = p.nhrtype ");
            SQL.Append("  AND phstats.r_date  < DATEADD(DAY,  -1, p.r_date) ");
            SQL.Append("  AND phstats.r_date >= DATEADD(MONTH,-12, p.r_date) ");
            SQL.Append("  ) DESC ))                           /40.0,6) AS rhrturfrank, ");
            SQL.Append("  ROUND ( (RANK () OVER (PARTITION BY p.r_id ORDER BY ");
            SQL.Append("  (SELECT AVG (rhr) ");
            SQL.Append("  FROM performances phstats ");
            SQL.Append("  WHERE phstats.h_id  = p.h_id ");
            SQL.Append("  AND phstats.finpos <> 99 ");
            SQL.Append("  AND phstats.nhrtype = p.nhrtype ");
            SQL.Append("  AND phstats.r_date  < DATEADD(DAY,  -1, p.r_date) ");
            SQL.Append("  AND phstats.r_date >= DATEADD(MONTH,-12, p.r_date) ");
            SQL.Append("  ) DESC ))                           /40.0,6) AS avgrhrturfrank, ");
            SQL.Append("  ROUND ( RANK () OVER (PARTITION BY p.r_id ORDER BY ");
            SQL.Append("  (SELECT (AVG (finpos) ) ");
            SQL.Append("  FROM performances ptstats ");
            SQL.Append("  WHERE ptstats.h_id  = p.h_id ");
            SQL.Append("  AND ptstats.r_date  < DATEADD(DAY, -1, p.r_date) ");
            SQL.Append("  AND ptstats.r_date >= DATEADD(DAY, -300, p.r_date) ");
            SQL.Append("  AND ptstats.finpos <> 99 ");
            SQL.Append("  )                                                              * -1 DESC ) / 40.0, 6 ) AS avgfinposrank, ");
            SQL.Append("  ((CONVERT(INT,dbo.regexismatch('mstke|peck',prevp.comments,1)) + CONVERT(INT,dbo.regexismatch('nt fluent',prevp.comments,1)) + CONVERT(INT,dbo.regexismatch('j. slowly|slow jumps',prevp.comments,1)) + CONVERT(INT,dbo.regexismatch('blnd', prevp.comments,1)) + CONVERT(INT,dbo.regexismatch('j.rt|j.lft',prevp.comments,1)) + CONVERT(INT,dbo.regexismatch('hit ',prevp.comments,1)) + CONVERT(INT,dbo.regexismatch('awkward ',prevp.comments,1)) + CONVERT(INT,dbo.regexismatch('stmbld ',prevp.comments,1)) + CONVERT(INT,dbo.regexismatch('nt jump wl',prevp.comments,1))+ CONVERT(INT,dbo.regexismatch('outj',prevp.comments,1)) + CONVERT(INT,dbo.regexismatch('bdly',prevp.comments,1))) + ((CONVERT(INT,dbo.regexismatch('mstke|peck',prevp2.comments,1)) + CONVERT(INT,dbo.regexismatch('nt fluent',prevp2.comments,1)) + CONVERT(INT,dbo.regexismatch('j. slowly|slow jumps',prevp2.comments,1)) + CONVERT(INT,dbo.regexismatch('blnd',prevp2.comments,1)) + CONVERT(INT,dbo.regexismatch('j.rt|j.lft', ");
            SQL.Append("  prevp2.comments ,1 ))                                          + CONVERT(INT,dbo.regexismatch('hit ',prevp2.comments,1)) + CONVERT(INT,dbo.regexismatch('awkward ',prevp2.comments,1)) + CONVERT(INT,dbo.regexismatch('stmbld ',prevp2.comments,1)) + CONVERT(INT ,dbo.regexismatch('nt jump wl',prevp2.comments,1)) + CONVERT(INT,dbo.regexismatch('outj',prevp2.comments,1)) + CONVERT(INT,dbo.regexismatch('bdly',prevp2.comments,1))) * .5) + ((CONVERT(INT,dbo.regexismatch('mstke|peck',prevp3.comments,1)) + CONVERT(INT,dbo.regexismatch('nt fluent',prevp3.comments,1)) + CONVERT(INT,dbo.regexismatch('j. slowly|slow jumps',prevp3.comments,1)) + CONVERT(INT,dbo.regexismatch('blnd',prevp3.comments,1)) + CONVERT(INT,dbo.regexismatch('j.rt|j.lft',prevp3.comments,1)) + CONVERT(INT,dbo.regexismatch('hit ',prevp3.comments,1)) + CONVERT(INT,dbo.regexismatch('awkward ',prevp3.comments,1)) + CONVERT(INT,dbo.regexismatch('stmbld ',prevp3.comments,1)) + CONVERT(INT,dbo.regexismatch('nt jump wl', ");
            SQL.Append("  prevp3.comments,1))                                            + CONVERT(INT,dbo.regexismatch('outj',prevp3.comments,1)) + CONVERT(INT,dbo.regexismatch('bdly',prevp3.comments,1))) * .25))/ 4.0 mistakes, ");
            SQL.Append("  CASE ");
            SQL.Append("    WHEN p.nhrtype = 'CHS' ");
            SQL.Append("    THEN 1 ");
            SQL.Append("    WHEN p.nhrtype = 'HDL' ");
            SQL.Append("    THEN 0.1 ");
            SQL.Append("    ELSE -1 ");
            SQL.Append("  END rtype, ");
            SQL.Append("  CASE ");
            SQL.Append("    WHEN isnull(prevp.nhrtype,'null') = 'CHS' ");
            SQL.Append("    THEN 1 ");
            SQL.Append("    WHEN isnull(prevp.nhrtype,'null') = 'HDL' ");
            SQL.Append("    THEN 0.1 ");
            SQL.Append("    ELSE -1 ");
            SQL.Append("  END prevrtype, ");
            SQL.Append("  CASE p.finpos ");
            SQL.Append("    WHEN 1 ");
            SQL.Append("    THEN 1 ");
            SQL.Append("    ELSE 0 ");
            SQL.Append("  END AS Win_Bool ");
            SQL.Append("FROM performances p ");
            SQL.Append("INNER JOIN races ");
            SQL.Append("ON races.r_ID = p.R_id ");
            SQL.Append("LEFT JOIN performances prevp ");
            SQL.Append("ON p.prevperform = prevp.p_id ");
            SQL.Append("LEFT JOIN performances prevp2 ");
            SQL.Append("ON prevp.prevperform = prevp2.p_id ");
            SQL.Append("LEFT JOIN performances prevp3 ");
            SQL.Append("ON prevp2.prevperform = prevp3.p_id ");
            SQL.Append("LEFT JOIN performances prevp4 ");
            SQL.Append("ON prevp3.prevperform = prevp4.p_id ");
            SQL.Append("LEFT JOIN performances prevp5 ");
            SQL.Append("ON prevp4.prevperform = prevp5.p_id ");
            SQL.Append("LEFT JOIN performances prevp6 ");
            SQL.Append("ON prevp5.prevperform = prevp6.p_id ");
            SQL.Append("LEFT JOIN races prevr ");
            SQL.Append("ON prevr.r_id = prevp.r_id ");
            SQL.Append("LEFT JOIN races prevr2 ");
            SQL.Append("ON prevr2.r_id     = prevp2.r_id ");
            return SQL.ToString();

        }
    }
    

}
